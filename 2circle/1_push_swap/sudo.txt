
def A_to_B(r)
	if r < 3
		적절히 정렬
		return
	스택A 원소 중에서 "적절한" 피봇을 2개 선택한다
	tmp = 스택A의 top # 연산할 대상
	for r개의 원소에 대해서
		if tmp >= 피봇[큰것]
			ra명령으로 뒤로 넘긴다
			ra호출횟수++
		else
			pb명령으로 b로 보낸다
			pb호출횟수++
			if tmp >= 피봇 [작은것]
				rb명령으로 뒤로 넘긴다
				rb호출횟수++
	for ra호출횟수, rb호출횟수
		rrr호출 #[3]과 [2]를 스택 앞으로 가져온다
	A_to_B(ra호출 횟수) #[3]
	B_to_A(rb호출 횟수) #[2]
	B_to_A(pb호출 횟수 - rb 호출 횟수) #[1]

def B_to_A(r)
	if r < 3
		적절히 정렬/pa로 보내기
		return
	스택B 원소 중에서 "적절한" 피봇을 2개 선택한다
	tmp = 스택B의 top # 연산할 대상
	for r개의 원소에 대해서
		if tmp < 피봇[작은것]
			rb명령으로 뒤로 넘긴다
			rb호출횟수++
		else
			pa명령으로 a로 보낸다
			pa호출횟수++
			if tmp < 피봇 [큰것]
				ra명령으로 뒤로 넘긴다
				ra호출횟수++
	A_to_B(pa호출횟수 - ra호출횟수) #[3]
	for ra호출횟수, rb호출횟수
		rrr호출 #[1]과 [2]를 스택 앞으로 가져온다
	A_to_B(ra호출횟수) #[2]
	B_to_A(rb호출횟수) #[1]
```